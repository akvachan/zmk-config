#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    keymap {
        compatible = "zmk,keymap";

        Default_Layer {
            bindings = <
&trans        &trans      &trans    &trans    &trans    &trans              &trans     &trans    &trans             &trans        &trans     &trans
&trans        &trans      &trans    &trans    &trans    &trans              &trans     &trans    &trans             &trans        &trans     &trans
&kp TAB       &kp Q       &kp W     &kp E     &kp R     &kp T               &kp Y      &kp U     &kp I              &kp O         &kp P      &kp EXCL
&kp LCTRL     &kp A       &kp S     &kp D     &kp F     &kp G               &kp H      &kp J     &kp K              &kp L         &kp SEMI   &kp SQT
&kp LSHFT     &kp Z       &kp X     &kp C     &kp V     &kp B               &kp N      &kp M     &kp COMMA          &kp DOT       &kp FSLH   &kp RSHFT
&bt BT_SEL 0  &kp TILDE2  &kp LALT  &kp RALT  &trans                                   &trans    &kp RIGHT_ALT      &kp LEFT_ALT  &kp GRAVE  &bt BT_SEL 1
                                              &kp RET   &kp DEL  &kp ESC    &kp GRAVE  &kp BSPC  &kp SPACE
                                              &kp LGUI  &mo 1    &mo 2      &mo 2      &mo 1     &kp RIGHT_COMMAND
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans           &trans  &trans  &trans  &trans                     &trans  &trans                &trans             &trans                &trans  &trans
&trans  &trans           &trans  &trans  &trans  &trans                     &trans  &trans                &trans             &trans                &trans  &trans
&trans  &kp KP_DOT       &kp N7  &kp N8  &kp N9  &kp EQUAL                  &trans  &kp C_BRIGHTNESS_DEC  &kp UP             &kp C_BRIGHTNESS_INC  &trans  &trans
&trans  &kp KP_SUBTRACT  &kp N4  &kp N5  &kp N6  &kp KP_PLUS                &trans  &kp LEFT              &kp DOWN           &kp RIGHT             &trans  &trans
&trans  &kp KP_DIVIDE    &kp N1  &kp N2  &kp N3  &kp KP_MULTIPLY            &trans  &kp K_MUTE            &kp C_VOLUME_DOWN  &kp C_VOLUME_UP       &trans  &trans
&trans  &trans           &trans  &kp N0  &trans                                     &kp LG(LS(MINUS))     &kp LG(PLUS)       &trans                &trans  &trans
                                         &trans  &trans           &trans    &trans  &trans                &trans
                                         &trans  &trans           &trans    &trans  &trans                &trans
            >;
        };

        Symbols_Layer {
            bindings = <
&trans  &trans     &trans  &trans                &trans                 &trans            &trans  &trans            &trans             &trans                    &trans      &trans
&trans  &trans     &trans  &trans                &trans                 &trans            &trans  &trans            &trans             &trans                    &trans      &trans
&trans  &trans     &trans  &trans                &trans                 &trans            &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans                    &trans      &trans
&trans  &kp CARET  &kp AT  &kp HASH              &kp PERCENT            &trans            &trans  &kp AMPERSAND     &kp ASTERISK       &kp LS(NON_US_BACKSLASH)  &kp DOLLAR  &trans
&trans  &trans     &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans            &trans  &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans                    &trans      &trans
&trans  &trans     &trans  &trans                &trans                                           &trans            &trans             &trans                    &trans      &trans
                                                 &trans                 &trans  &trans    &trans  &trans            &trans
                                                 &trans                 &trans  &trans    &trans  &trans            &trans
            >;
        };
    };
};

// right hand trackball configuration
// &trackball_peripheral_listener {
//    input-processors =
//     activate layer 3 within 500ms of the trackball moving
//     <&zip_temp_layer 3 500>;
// };
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
