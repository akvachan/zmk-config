#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    keymap {
        compatible = "zmk,keymap";

        Primary_Layer {
            bindings = <
&trans          &trans            &trans          &trans                &trans         &trans                        &trans           &trans             &trans                 &trans           &trans             &trans
&trans          &trans            &trans          &trans                &trans         &trans                        &trans           &trans             &trans                 &trans           &trans             &trans
&kp TAB         &kp Q             &kp W           &kp E                 &kp R          &kp T                         &kp Y            &kp U              &kp I                  &kp O            &kp P              &kp ESCAPE
&kp LCTRL       &kp A             &kp S           &kp D                 &kp F          &kp G                         &kp H            &kp J              &kp K                  &kp L            &kp SEMI           &kp ENTER
&kp LSHFT       &kp Z             &kp X           &kp C                 &kp V          &kp B                         &kp N            &kp M              &kp COMMA              &kp DOT          &kp FSLH           &kp RSHFT
&bt BT_CLR_ALL  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &trans                                                        &trans             &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp SQT
                                                                        &kp BACKSPACE  &kp LEFT_COMMAND  &kp DEL     &kp PRINTSCREEN  &kp RIGHT_COMMAND  &kp SPACE
                                                                        &mo 1          &kp RALT          &kp LALT    &kp LALT         &kp RALT           &mo 1
            >;
        };

        Secondary_Layer {
            bindings = <
&trans        &trans        &trans                &trans                &trans     &trans                  &trans        &trans          &trans             &trans           &trans         &trans
&trans        &trans        &trans                &trans                &trans     &trans                  &trans        &trans          &trans             &trans           &trans         &trans
&trans        &kp EXCL      &kp CARET             &kp AT                &kp HASH   &kp PLUS                &kp PERCENT   &kp AMPS        &kp STAR           &kp DOLLAR       &kp EQUAL      &trans
&trans        &kp N1        &kp N2                &kp N3                &kp N4     &kp NUMBER_5            &kp NUMBER_6  &kp N7          &kp N8             &kp N9           &kp N0         &trans
&trans        &kp TILDE     &kp GRAVE             &kp BACKSLASH         &kp MINUS  &kp UNDER               &kp TILDE2    &kp LEFT_ARROW  &kp DOWN           &kp UP_ARROW     &kp RIGHT      &trans
&bt BT_SEL 0  &bt BT_SEL 1  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans                                           &trans          &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp LG(MINUS)  &kp LG(PLUS)
                                                                        &trans     &trans        &trans    &trans        &trans          &trans
                                                                        &trans     &trans        &trans    &trans        &trans          &trans
            >;
        };
    };
};

// right hand trackball configuration
// &trackball_peripheral_listener {
//    input-processors =
//     activate layer 3 within 500ms of the trackball moving
//     <&zip_temp_layer 3 500>;
// };
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,,,,,,,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
