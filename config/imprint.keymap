#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define GME 3
#define GSH 4

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC   &kp Q  &kp W  &kp E  &kp R  &kp T               &kp Y  &kp U  &kp I     &kp O   &kp P    &kp NUBS
                &kp TAB   &kp A  &kp S  &kp D  &kp F  &kp G               &kp H  &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &kp LCTRL &kp Z  &kp X  &kp C  &kp V  &kp B               &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHIFT
                                 &kp LBKT &kp RBKT                                      &kp MINUS &kp EQUAL
                                            &kp LSHFT  &kp RETURN         &kp BSPC  &kp SPACE
                                            &mo LWR    &kp LALT           &kp DEL   &mo RSE
                                            &kp HOME   &kp GRAVE          &kp LGUI  &kp END
            >;
        };

        lower_layer {
            bindings = <
                &to GME &trans    &trans    &trans   &trans    &kp GRAVE           &trans &kp N7 &kp N8 &kp N9 &trans &trans
                &trans  &kp EXCL  &kp AT    &kp HASH &kp DLLR  &trans              &trans &kp N4 &kp N5 &kp N6 &trans &trans
                &trans  &kp PRCNT &kp CARET &kp AMPS &kp STAR  &trans              &trans &kp N1 &kp N2 &kp N3 &trans &trans
                                  &kp LPAR  &kp RPAR                                              &kp N0 &trans
                                                     &trans &trans                 &trans &trans
                                                     &trans &trans                 &trans &trans
                                                     &trans &trans                 &trans &trans
            >;
        };

        raise_layer {
            bindings = <
                &trans  &trans &trans   &kp UP   &trans    &trans                &trans &kp F7 &kp F8 &kp F9 &kp F10 &trans
                &trans  &trans &kp LEFT &kp DOWN &kp RIGHT &trans                &trans &kp F4 &kp F5 &kp F6 &kp F11 &trans
                &trans  &trans &trans   &trans   &trans    &trans                &trans &kp F1 &kp F2 &kp F3 &kp F12 &trans
                               &trans &trans                                                   &trans &trans
                                             &trans &trans                       &trans &trans
                                             &trans  &trans                      &trans &trans
                                             &trans  &trans                      &trans &trans
            >;
        };

        game_layer {
            bindings = <
                &kp ESC   &kp N1  &kp Q    &kp W  &kp E  &kp R                 &trans &trans &trans &trans &trans &kp K_VOL_UP
                &kp TAB   &kp N2  &kp A    &kp S  &kp D  &kp F                 &trans &trans &trans &trans &trans &kp K_VOL_DN
                &kp LCTRL &kp N3  &kp Z    &kp X  &kp C  &kp V                 &trans &trans &trans &trans &trans &kp K_MUTE
                                    &kp LBKT &kp RBKT                                        &trans &trans
                                             &kp LSHFT &kp SPACE                  &trans &trans
                                             &mo GSH   &kp LALT                   &trans &trans
                                             &kp G     &kp T                      &trans &trans
            >;
        };

        game_shift {
            bindings = <
                &to DEFAULT &kp N4 &trans     &kp UP   &trans    &trans                         &trans &trans &trans &trans &trans &kp K_VOL_UP
                &trans      &kp N5 &kp LEFT   &kp DOWN &kp RIGHT &trans                         &trans &trans &trans &trans &trans &kp K_VOL_DN
                &trans      &kp N6 &kp K_MUTE &kp K_VOL_DN   &kp K_VOL_UP &trans                &trans &trans &trans &trans &trans &kp K_MUTE
                                   &trans     &trans                                                          &trans &trans
                                             &trans &trans                                       &trans &trans
                                             &trans  &trans                                      &trans &trans
                                             &trans  &trans                                      &trans &trans
            >;
        };

    };
};
